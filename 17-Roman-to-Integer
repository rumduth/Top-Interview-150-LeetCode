class Solution {
public:
    int romanToInt(string s) {
        unordered_map<char, int> m = {
            {'I',1},
            {'V',5},
            {'X',10},
            {'L',50},
            {'C',100},
            {'D',500},
            {'M',1000}
        };
        int ans = 0;
        int prev = 0;
        for(int i = s.size() - 1; i>=0; i--)
        {
            if(i == s.size() - 1 || m[s[i]] >= prev )
                ans += m[s[i]];
            else
                ans -= m[s[i]];

            prev = m[s[i]];
        }
        return ans;

    }
};

Time Complexity: O(N)
Space Complexity: O(1)

NOTE:: There are many ways to do this problem. However, we can do hashmap to avoid doing iteratively checking each condition.
Consider: IV means V - I for more hints
