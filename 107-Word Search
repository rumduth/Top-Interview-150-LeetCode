class Solution {
public:
    bool helper(vector<vector<char>>& board, string word, int index, int i, int j)
    {
        if(index == word.size())
            return true;
        if(i < 0 || i == board.size() || j < 0 || j == board[0].size())
            return false;
        if(board[i][j] == '$')
            return false;
        if(board[i][j] != word[index])
            return false;
        char x = board[i][j];
        board[i][j] = '$';
        bool a = helper(board,word,index+1,i+1, j);
        bool b = helper(board,word,index+1,i-1, j);
        bool c = helper(board,word,index+1,i, j+1);
        bool d = helper(board,word,index+1,i, j-1);
        board[i][j] = x;
        return a || b || c || d;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m = board.size();
        int n = board[0].size();
        for(int i = 0; i < m; i++)
        {
            for(int j = 0; j < n; j++)
            {
                if(word[0] == board[i][j])
                {
                    bool a = helper(board, word, 0, i ,j);
                    if(a == true)
                        return true;
                }
            }    
        }
        return false;

    }
};
