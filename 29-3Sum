class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());//nlogn
        vector<vector<int>> ans;
        for(int i = 0; i<=nums.size()-3; i++)
        {
            int target = 0 - nums[i];
            int j = i + 1;
            int k = nums.size() - 1;
            while(j < k)
            {
                if(nums[j] + nums[k] == target)
                {
                    ans.push_back({nums[i],nums[j++],nums[k--]});
                    while(k > j && nums[k] == nums[k+1])
                        k--;
                    while(j < k && nums[j] == nums[j-1])
                        j++;
                }
                else if(nums[j] + nums[k] > target)
                    k--;
                else
                    j++;
            }
            while(i <= nums.size() - 3 && nums[i+1] == nums[i])
                i++;
        }
        return ans;
    }
};
Time Complexity: O(NLogN)
Space Complexity: O(1)
