class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char, int> m;
        int ans = 0;
        int start = 0;
        for(int i = 0; i<s.size(); i++)
        {
            if(!m.count(s[i]) || (m.count(s[i]) && start > m[s[i]]))
            {
                m[s[i]] = i;
                ans = max(ans,i - start + 1);
            }
            else
            {
                start = m[s[i]] + 1;
                ans = max(ans,i-start+1);
                m[s[i]] = i;
            }
        }
        return ans;
    }
};

Time Complexity: O(N)
Space Complexity: O(1)
