class Solution {
public:
    int minDistance(string word1, string word2) {
       
        int m = word1.size();
        int n = word2.size();
        vector<vector<int>> dp(m+1, vector<int>(n+1,0));
        for(int j = 0; j <= n; j++)
            dp[0][j] = j;
        for(int i = 0; i <= m; i++)
            dp[i][0] = i;

        for(int i = 1; i <= m; i++)
        {
            for(int j = 1; j <= n; j++)
            {
                int ins;
                int del;
                int rep;
                if(word1[i-1] == word2[j-1])
                    dp[i][j] = dp[i-1][j-1];
                else
                {
                    rep = 1 + dp[i-1][j-1];
                    del = 1 + dp[i-1][j];
                    ins = 1 + dp[i][j-1];
                    dp[i][j] = min(min(ins,del),rep);
                }
                
                
            }
        }
        return dp[m][n];
    }
};

/*

    r o s
  0 1 2 3
  0 1 2 3
h 1 
o 2
r 3
s 4
e 5
*/
