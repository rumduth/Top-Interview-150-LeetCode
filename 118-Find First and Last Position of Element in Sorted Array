class Solution {
public:
    int search(vector<int>& nums, int s, int e, int target, bool left)
    {
        int ans = -1;
        while(s<=e)
        {
            int m = (s+e)/2;
            if(nums[m] == target && left == true)
            {
                ans = m;
                e = m - 1;
            }
            else if(nums[m] == target && left != true)
            {
                ans = m;
                s = m + 1;
            }
            else if(nums[m] < target)
                s = m + 1;
            else
                e = m - 1;
        }
        return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        int i = 0;
        int j = nums.size() - 1;
        vector<int> ans(2,-1);
        while(i <= j)
        {
            int m = (i + j) / 2;
            if(nums[m] == target)
            {
                ans[0] = search(nums,i,m,target,true);
                ans[1] = search(nums,m,j, target,false);
                return ans;
            }
            else if(nums[m] > target)
                j = m - 1;
            else
                i = m + 1;
        }
        return ans;
    }
};
