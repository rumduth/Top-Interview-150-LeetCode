class Solution {
public:
    bool canJump(vector<int>& nums) {
        int last_index = nums.size() - 1;
        int max_jump = nums[0];
        if(max_jump >= last_index)
            return true;

        for(int i = 1; i<nums.size(); i++)
        {
            if(i > max_jump)
                return false;
            max_jump = max(max_jump, i+nums[i]);
        }
        return true;
    }
};

Time Complexity: O(N)
Space Complexity: O(1)

Note: Consider where is the maximum jump at one point. 
