/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<pair<int, ListNode*>, vector<pair<int, ListNode*>>, greater<pair<int,ListNode*>>> pq;
        for(int i = 0; i < lists.size(); i++)
        {
            ListNode* head = lists[i];
            while(head != NULL)
            {
                pq.push({head->val,head});
                head = head->next;
            }
        }
        
        ListNode* ans = NULL;
        ListNode* f = NULL;
        while(!pq.empty())
        {
            if(ans == NULL)
            {
                ans = pq.top().second;
                f = ans;
            }
            else 
            {
                f->next = pq.top().second;
                f = f->next;
            }
            pq.pop();
        }
        return ans;
    }
};
